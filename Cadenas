Ejercicio 1

#include <stdio.h>
#include <stdlib.h>

int main(int argc, char** argv) {
    
    char cadena[250];
    int longitud=0;
    
    printf("Introduzca una cadena: ");
    //Guardo la cadena en el vector
    scanf("%s",cadena);
    
    //Averiguo la longitud de la cadena
    int i=0;
    while (cadena[i]!='\0'){
        longitud++;
        i++;
    }
    
    //Escribo los caracteres con un salto de línea
    for(int i=0; i<=longitud; i++){
        printf("%c\n",cadena[i]);
    }
    
    return 0;
}
--------------------------------------------------------------------------------
Ejercicio 1 (gets)

#include <stdio.h>
#include <stdlib.h>

int main(int argc, char** argv) {
    
    char cadena[250];
    int longitud=0;
    
    printf("Introduzca una cadena: ");
    //Guardo la cadena en el vector
    gets(cadena);
    
    //Averiguo la longitud de la cadena
    int i=0;
    while (cadena[i]!='\0'){
        longitud++;
        i++;
    }
    
    //Escribo los caracteres con un salto de línea
    for(int i=0; i<=longitud; i++){
        printf("%c\n",cadena[i]);
    }
    
    return 0;
}
--------------------------------------------------------------------------------
Ejercicio 2
        
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char** argv) {
    
    char cadena[250];
    
    //Pido el nombre al usuario
    printf("Introduzca su nombre: ");
    gets(cadena);
    
    //Imprimo su nombre junto al saludo
    printf("Hola %s",cadena);
    
    return 0;
}
--------------------------------------------------------------------------------
Ejercicio 3
        
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char** argv) {
    
    char cadena[250];
    
    //Pido la frase al usuario
    printf("Introduzca una frase: ");
    gets(cadena);
    
    //Comparo la primera posición del vector para ver si es una 'H'
    if (cadena[0]=='H'){
        printf("La frase empieza por H");
    }else{
        printf("La frase no empieza por H");
    }
    
    return 0;
}
--------------------------------------------------------------------------------
Ejercicio 4
        
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char** argv) {
    
    char cadena[250];
    
    //Pido la frase al usuario
    printf("Introduzca una frase: ");
    gets(cadena);
    
    //Comparo la primera posición del vector para ver si es una 'H', esta vez
    //da igual si la 'h' es minúscula o mayúscula
    if (cadena[0]=='H' || cadena[0]=='h'){
        printf("La frase empieza por H");
    }else{
        printf("La frase no empieza por H");
    }
    
    return 0;
}
--------------------------------------------------------------------------------
Ejercicio 4 (toupper)
        
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>

int main(int argc, char** argv) {
    
    char cadena[250];
    
    //Pido la frase al usuario
    printf("Introduzca una frase: ");
    gets(cadena);
    
    //Comparo la primera posición del vector para ver si es una 'H', esta vez
    //da igual si la 'h' es minúscula o mayúscula
    cadena[0]=toupper(cadena[0]);
    if (cadena[0]=='H'){
        printf("La frase empieza por H");
    }else{
        printf("La frase no empieza por H");
    }
    
    return 0;
}
--------------------------------------------------------------------------------
Ejercicio 5
        
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char** argv) {
    
    char cadena[250],c;
    bool encontrado=false;
    
    //Pido la frase al usuario
    printf("Introduzca una frase: ");
    gets(cadena);
    
    //Averiguo la longitud de la cadena
    int i, longitud=0;
    while (cadena[i]!='\0'){
        longitud++;
        i++;
    }
    
    //Pido el carácter que quiere buscar
    printf("Introduzca un carácter: ");
    scanf("%c",&c);
    
    //Busco ese carácter por todo el vector, si lo encuentra devuelve un mensaje
    //con la posición
    for(int i=0; i<=longitud; i++){
        if(c==cadena[i]){
            encontrado=true;
            printf("El carácter introducido está en la posición %d\n",i);
        }
    }
    
    if(encontrado==false){
        printf("No se encuentra el carácter en el vector");
    }
    
    return 0;
}
--------------------------------------------------------------------------------
Ejercicio 6
        
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char** argv) {
    
    char cadena1[250],cadena2[250],juntas[250];
    
    printf("Introduce una palabra: ");
    gets(cadena1);
    
    printf("Introduce otra palabra: ");
    gets(cadena2);
    
    //Averiguo la longitud de la cadena
    int i=0, longitud=0;
    while (cadena1[i]!='\0'){
        longitud++;
        i++;
    }
    
    //Asigno cada caracter por separado a un nuevo vector
    for (int i=0, j=0; i<=longitud; i++){
        juntas[j]=cadena1[i];
        j++;
        juntas[j]=cadena2[i];
        j++;
    }
    
    printf("%s",juntas);
    
    return 0;
}
--------------------------------------------------------------------------------
Ejercicio 7
        
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(int argc, char** argv) {
    
    char cadena1[250],cadena2[250],juntas[250];
    int i=0,j=0,k=0,longitud1,longitud2,longmin,longmax;
    
    printf("Introduce una palabra: ");
    gets(cadena1);
    
    printf("Introduce otra palabra: ");
    gets(cadena2);
    
    //Averiguo la longitud de la cadena1
    longitud1=0;
    while (cadena1[i]!='\0'){
        longitud1++;
        i++;
    }
    
    //Averiguo la longitud de la cadena2
    longitud2=0;
    while (cadena2[j]!='\0'){
        longitud2++;
        j++;
    }
    
    //Asigno la longitud mínima y máxima a una variable
    if (longitud1>longitud2){
        longmin=longitud2;
        longmax=longitud1;
    }else{
        if(longitud1<longitud2){
            longmin=longitud1;
            longmax=longitud2;
        }
    }
        
    //Asigno cada caracter por separado a un nuevo vector hasta la longitud minima
    for (int i=0; i<longmin; i++){
        juntas[k]=cadena1[i];
        k++;
        juntas[k]=cadena2[i];
        k++;
    }
    
    //Si la cadena1 es más larga, asigno los caracteres restantes que queden
    if(strlen(cadena1)>strlen(cadena2)){
        for (int i=longmin; i<=longmax; i++){
            juntas[k]=cadena1[i];
            k++;
        }
    }
    
    //Si la cadena2 es más larga, asigno los caracteres restantes que queden
    if(strlen(cadena2)>strlen(cadena1)){
        for (int i=longmin; i<=longmax; i++){
            juntas[k]=cadena2[i];
            k++;
        }
    }
    
    //Si las dos cadenas son iguales, asigno los caracteres sin importar la longitud
    if(strlen(cadena1)==strlen(cadena2)){
        for (int i=0, j=0; i<=strlen(cadena1); i++){
            juntas[j]=cadena1[i];
            j++;
            juntas[j]=cadena2[i];
            j++;
        }
    }
    
    printf("%s",juntas);
    
    return 0;
}
--------------------------------------------------------------------------------
Ejercicio 8 [inacabado]
        
#include <stdio.h>
#include <stdlib.h>

bool indexOf(){
    
    
    
}

int main(int argc, char** argv) {
    
    //Pido la frase al usuario
    printf("Introduzca una frase: ");
    gets(cadena);
    
    //Averiguo la longitud de la cadena
    int i, longitud=0;
    while (cadena[i]!='\0'){
        longitud++;
        i++;
    }
    
    //Pido el carácter que quiere buscar
    printf("Introduzca un carácter: ");
    scanf("%c",&c);
    
    //Busco ese carácter por todo el vector, si lo encuentra devuelve un mensaje
    //con la posición
    for(int i=0; i<=longitud; i++){
        if(c==cadena[i]){
            encontrado=true;
            printf("El carácter introducido está en la posición %d\n",i);
        }
    }
    
    if(encontrado==false){
        printf("No se encuentra el carácter en el vector");
    }
    
    return 0;
}
--------------------------------------------------------------------------------